# Use an official Python runtime as a parent image
FROM python:3.12-slim

# Set the working directory in the container
WORKDIR /app

# Copy the requirements file into the container at /app
# requirements.txt will be generated by Makefile or should be present
COPY requirements.txt .

# Install dependencies from requirements.txt
# Flask and reportlab should be listed in requirements.txt
# gunicorn is added for a production-grade WSGI server
RUN pip install --no-cache-dir -r requirements.txt

# Copy the Python source files into the container at /app
COPY math_question.py .
COPY server.py .

# Make port 8080 available to the world outside this container
EXPOSE 8080

# Run the application using Gunicorn
# Gunicorn is a more robust WSGI server than Flask's built-in development server
# The number of workers can be adjusted based on expected load and server resources
# For example, (2 * $CPU_CORES) + 1 is a common recommendation
# CMD ["python", "server.py"] # Development server
CMD ["gunicorn", "--bind", "0.0.0.0:8080", "--workers", "4", "server:app"]